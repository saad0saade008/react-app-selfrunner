name: Build and Deploy React App to EC2 using Docker

on:
  push:
    branches:
      - main  # Trigger on push to 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use an Ubuntu runner to run the job

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Checkout the code from your repository

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for building Docker images

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username (stored as a secret)
        password: ${{ secrets.DOCKER_PASSWORD }}  # Your Docker Hub password (stored as a secret)

    - name: Build Docker image
      run: |
        docker build -t my-react-app .  # Build the Docker image using the Dockerfile in the repo

    - name: Push Docker image to DockerHub (optional)
      run: |
        docker tag my-react-app ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest  # Tag the image
        docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest  # Push the image to DockerHub (optional)

    - name: Upload Dockerfile to EC2 instance
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}  # EC2 instance IP or domain (stored as a secret)
        username: ${{ secrets.EC2_USER }}  # SSH username (e.g., ec2-user, ubuntu, etc.)
        key: ${{ secrets.EC2_SSH_KEY }}  # SSH private key for EC2 (stored as a secret)
        port: 22  # SSH port (default is 22)
        source: "./Dockerfile"  # Path to the Dockerfile on your local machine
        target: "/home/ubuntu/my-react-app"  # Target directory on your EC2 instance (adjust if necessary)

    - name: SSH into EC2 to deploy Docker container
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          cd /home/ubuntu/my-react-app
          docker pull ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest  # Pull the latest image from DockerHub (optional)
          # Alternatively, if you don't push to DockerHub, build the image on EC2:
          # docker build -t my-react-app .
          docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest  # Run the app on port 80
          # If you are building the image on EC2 directly, uncomment the following lines instead:
          # docker build -t my-react-app .
          # docker run -d -p 80:80 my-react-app
